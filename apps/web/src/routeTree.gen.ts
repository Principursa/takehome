/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as LoginRouteImport } from './routes/login'
import { Route as DashboardRouteImport } from './routes/dashboard'
import { Route as IndexRouteImport } from './routes/index'
import { Route as ReferralIndexRouteImport } from './routes/referral/index'
import { Route as ReferralTradesRouteImport } from './routes/referral/trades'
import { Route as ReferralTestRouteImport } from './routes/referral/test'
import { Route as ReferralNetworkRouteImport } from './routes/referral/network'
import { Route as ReferralEarningsRouteImport } from './routes/referral/earnings'

const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardRoute = DashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ReferralIndexRoute = ReferralIndexRouteImport.update({
  id: '/referral/',
  path: '/referral/',
  getParentRoute: () => rootRouteImport,
} as any)
const ReferralTradesRoute = ReferralTradesRouteImport.update({
  id: '/referral/trades',
  path: '/referral/trades',
  getParentRoute: () => rootRouteImport,
} as any)
const ReferralTestRoute = ReferralTestRouteImport.update({
  id: '/referral/test',
  path: '/referral/test',
  getParentRoute: () => rootRouteImport,
} as any)
const ReferralNetworkRoute = ReferralNetworkRouteImport.update({
  id: '/referral/network',
  path: '/referral/network',
  getParentRoute: () => rootRouteImport,
} as any)
const ReferralEarningsRoute = ReferralEarningsRouteImport.update({
  id: '/referral/earnings',
  path: '/referral/earnings',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRoute
  '/login': typeof LoginRoute
  '/referral/earnings': typeof ReferralEarningsRoute
  '/referral/network': typeof ReferralNetworkRoute
  '/referral/test': typeof ReferralTestRoute
  '/referral/trades': typeof ReferralTradesRoute
  '/referral': typeof ReferralIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRoute
  '/login': typeof LoginRoute
  '/referral/earnings': typeof ReferralEarningsRoute
  '/referral/network': typeof ReferralNetworkRoute
  '/referral/test': typeof ReferralTestRoute
  '/referral/trades': typeof ReferralTradesRoute
  '/referral': typeof ReferralIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRoute
  '/login': typeof LoginRoute
  '/referral/earnings': typeof ReferralEarningsRoute
  '/referral/network': typeof ReferralNetworkRoute
  '/referral/test': typeof ReferralTestRoute
  '/referral/trades': typeof ReferralTradesRoute
  '/referral/': typeof ReferralIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dashboard'
    | '/login'
    | '/referral/earnings'
    | '/referral/network'
    | '/referral/test'
    | '/referral/trades'
    | '/referral'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/dashboard'
    | '/login'
    | '/referral/earnings'
    | '/referral/network'
    | '/referral/test'
    | '/referral/trades'
    | '/referral'
  id:
    | '__root__'
    | '/'
    | '/dashboard'
    | '/login'
    | '/referral/earnings'
    | '/referral/network'
    | '/referral/test'
    | '/referral/trades'
    | '/referral/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DashboardRoute: typeof DashboardRoute
  LoginRoute: typeof LoginRoute
  ReferralEarningsRoute: typeof ReferralEarningsRoute
  ReferralNetworkRoute: typeof ReferralNetworkRoute
  ReferralTestRoute: typeof ReferralTestRoute
  ReferralTradesRoute: typeof ReferralTradesRoute
  ReferralIndexRoute: typeof ReferralIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/referral/': {
      id: '/referral/'
      path: '/referral'
      fullPath: '/referral'
      preLoaderRoute: typeof ReferralIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/referral/trades': {
      id: '/referral/trades'
      path: '/referral/trades'
      fullPath: '/referral/trades'
      preLoaderRoute: typeof ReferralTradesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/referral/test': {
      id: '/referral/test'
      path: '/referral/test'
      fullPath: '/referral/test'
      preLoaderRoute: typeof ReferralTestRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/referral/network': {
      id: '/referral/network'
      path: '/referral/network'
      fullPath: '/referral/network'
      preLoaderRoute: typeof ReferralNetworkRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/referral/earnings': {
      id: '/referral/earnings'
      path: '/referral/earnings'
      fullPath: '/referral/earnings'
      preLoaderRoute: typeof ReferralEarningsRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DashboardRoute: DashboardRoute,
  LoginRoute: LoginRoute,
  ReferralEarningsRoute: ReferralEarningsRoute,
  ReferralNetworkRoute: ReferralNetworkRoute,
  ReferralTestRoute: ReferralTestRoute,
  ReferralTradesRoute: ReferralTradesRoute,
  ReferralIndexRoute: ReferralIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
